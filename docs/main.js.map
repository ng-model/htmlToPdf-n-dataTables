{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pdf/htmltopdf.component.css","webpack:///./src/app/pdf/htmltopdf.component.html","webpack:///./src/app/pdf/htmltopdf.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/sample.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { MatCardModule, MatToolbarModule, MatToolbar, MatButtonModule, MatButton ,MatMenuModule } from '@angular/material';\nimport { HtmltopdfComponent } from './pdf/htmltopdf.component';\nimport { routing } from './routes';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DataTablesModule } from 'angular-datatables';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HtmltopdfComponent\n  ],\n  imports: [\n    routing,\n    BrowserModule, DataTablesModule, HttpClientModule,\n    MatCardModule, MatToolbarModule, MatButtonModule,MatMenuModule,\n    BrowserAnimationsModule\n  ],\n  exports:[\n    BrowserModule,\n    MatCardModule, MatToolbarModule, MatButtonModule,MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div #content>\\n    <mat-card>\\n        <button class=\\\"btn btn-info\\\" type=\\\"button\\\" (click)=\\\"captureScreen()\\\">Capture as pdf</button>\\n    </mat-card>\\n  <mat-card>\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header bg-info\\\">\\n        <h4 class=\\\"m-b-0 text-white\\\">Dummy Data to demo print and data table print</h4>\\n      </div>\\n     \\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table id=\\\"convert\\\" class=\\\"table table-lg table-hover\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\n            <thead>\\n              <tr>\\n                <th>User ID</th>\\n                <th>First Name</th>\\n                <th>Last Name</th>\\n                <th>Create Date</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let user of users\\\">\\n                <td>{{user.checkOut}}</td>\\n                <td>\\n                  {{user.reservations}}\\n                </td>\\n                <td>\\n                  {{user.totalPaymentAmount | currency}}\\n                </td>\\n                <td>\\n                  {{user.timeStamp | date}}\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</mat-card>\\n</div>\\n\\n\"","import { Component, AfterViewInit, OnInit, ElementRef ,ViewChild} from '@angular/core';\nimport * as jspdf from 'jspdf';\nimport html2canvas from 'html2canvas';\n// import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SampleService } from '../sample.service';\nimport { DataTableDirective } from 'angular-datatables';\n// import swal from 'sweetalert2';\nimport { Subject } from 'rxjs';\nimport { DataTablesModule } from 'angular-datatables';\n\n@Component({\n  selector: 'app-htmltopdf',\n  templateUrl: './htmltopdf.component.html',\n  styleUrls: ['./htmltopdf.component.css']\n})\nexport class HtmltopdfComponent implements AfterViewInit, OnInit {\n\n  users; result; selectedUser; userPayload; editUserPayload;\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n  loggedInData; money; dateFormat;\n\n  @ViewChild('content') content:ElementRef;\n  constructor(private sampleService: SampleService) { }\n\n  public captureScreen()\n  {\n    var data = document.getElementById('convert');\n    html2canvas(data).then(canvas => {\n      var imgWidth = 208; \n      var pageHeight = 295;  \n      var imgHeight = canvas.height * imgWidth / canvas.width;\n      var heightLeft = imgHeight;\n      const contentDataURL = canvas.toDataURL('image/png')\n      let pdf = new jspdf('p', 'mm', 'a4');\n      var position = 0;\n      pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\n      pdf.save('Invoice.pdf')\n  });\n  }\n\n  ngOnInit(): void {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      dom: 'lBfrtip',\n      buttons: [\n        {\n          extend: 'copy',\n          className: 'btn btn-default ml-3',\n          init: function (api, node, config) {\n            $(node).removeClass('dt-button');\n          }\n        },\n        {\n          extend: 'print',\n          className: 'btn btn-default',\n          init: function (api, node, config) {\n            $(node).removeClass('dt-button');\n          }\n        },\n        {\n          extend: 'csv',\n          className: 'btn btn-default',\n          init: function (api, node, config) {\n            $(node).removeClass('dt-button');\n          }\n        }\n      ]\n    };\n    this.getUser();\n  }\n\n  ngAfterViewInit(): void {\n    this.dtTrigger.next();\n  }\n\n  getUser() {\n    this.sampleService.myData().subscribe((data) => {\n      this.result = data;\n      this.users = this.result.result.revenueData;\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.destroy();\n        this.dtTrigger.next();\n      });\n    });\n  }\n\n  \n}\n","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HtmltopdfComponent } from './pdf/htmltopdf.component';\n\n\nconst appRoutes: Routes = [\n    { path: '', redirectTo:'pdf',pathMatch:'full' },\n    { path: 'pdf', component: HtmltopdfComponent },\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SampleService {\n\n  constructor(private http: HttpClient) { }\n  url = ' https://www.jsonstore.io/ad39e35646fbc483bf1fb8e9572658ab86588f9e400efeb0d43eecd5247b8c75';\n\n  myData() {\n    return this.http.get(`${this.url}/chart`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}